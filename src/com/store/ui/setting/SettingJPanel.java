/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.store.ui.setting;

import com.store.config.Config;
import com.store.data.user.UserManager;
import com.store.db.DbBackup;
import com.store.logger.StoreLogger;
import com.store.ui.ITabComponent;
import com.store.ui.TabUIType;
import com.store.ui.common.ConfirmDialog;
import com.store.ui.common.btn.ButtonUtil;
import com.store.ui.common.combox.ComboBoxProxy;
import com.store.util.PathHelper;
import com.store.util.StringUtil;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author chenjingjun
 */
public class SettingJPanel extends javax.swing.JPanel implements ITabComponent{
    
    private ComboBoxProxy<String> recoverProxy;
    /**
     * Creates new form SettingJPanel
     */
    public SettingJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_backup = new javax.swing.JButton();
        btn_recover = new javax.swing.JButton();
        combox_date = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_init = new javax.swing.JButton();

        btn_backup.setText("备份数据库");
        btn_backup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backupActionPerformed(evt);
            }
        });

        btn_recover.setText("恢复数据库");
        btn_recover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_recoverActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        jLabel1.setText("jLabel1");

        btn_init.setText("还原系统");
        btn_init.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_initActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(879, 879, 879))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(combox_date, 0, 224, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_recover)
                            .addComponent(btn_backup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_init, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(857, 857, 857))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_backup, btn_init, btn_recover});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btn_init)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_backup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_recover, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(combox_date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(601, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_backup, btn_init, btn_recover, combox_date});

    }// </editor-fold>//GEN-END:initComponents

    private void btn_backupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backupActionPerformed
        try {
            String backpath = PathHelper.joinDataPath("backup");
            String string = DbBackup.backup(Config.getInstance().getValue("mysqlbin"), backpath);
            initBackupList();
            ConfirmDialog.show("备份文件路径:" + string);
        } catch (IOException ex) {
            StoreLogger.error("备份错误：", ex);
        }
    }//GEN-LAST:event_btn_backupActionPerformed

    private void btn_recoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_recoverActionPerformed
        try {
            String filename = combox_date.getSelectedItem().toString();
            if (StringUtil.isNullOrEmpty(filename)) {
                ConfirmDialog.show("没有选择恢复的数据文件");
            }
            else if (ConfirmDialog.confirm("确认要从备份中还原数据嘛？")) {
                String filepath = PathHelper.joinDataPath("backup/" + filename);
                DbBackup.recover(Config.getInstance().getValue("mysqlbin"), filepath);
                ConfirmDialog.show("数据已经从备份中还原！");
            }
        } catch (IOException ex) {
            StoreLogger.error("恢复错误：", ex);
        }
    }//GEN-LAST:event_btn_recoverActionPerformed

    /**
     * 
     * @param evt 
     */
    private void btn_initActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_initActionPerformed
        if (ConfirmDialog.confirm("确认还原系统嘛？")) {
            DbBackup.init();
            ConfirmDialog.show("系统已经还原！");
        }
    }//GEN-LAST:event_btn_initActionPerformed

    @Override
    public void initUI(boolean realod) {
        initBackupCommonnet();
    }

    @Override
    public void initOne() {
       initBackupCommonnet();
    }

    @Override
    public boolean siwtchEnanble() {
        return true;
    }

    @Override
    public TabUIType getTabUIType() {
        return TabUIType.Setting;
    }
    
    private void initBackupCommonnet(){
        initBackupList();
        ButtonUtil.enable(btn_backup, UserManager.isAdmin());
        ButtonUtil.enable(btn_recover, UserManager.isSystem());
        ButtonUtil.enable(btn_init, UserManager.isSystem());
    }
    
    private void initBackupList(){
        String backpath = PathHelper.joinDataPath("backup");
        File directory = new File(backpath);
        List<String> nameList = new ArrayList<>();
        if (directory.exists()) {
           File[] files = directory.listFiles();  
            for (int i = files.length - 1; i >= 0; i--) {
                String name = files[i].getName();
                if (name.endsWith("sql")) {
                   nameList.add(name);
               }
            }
        }
        else{
            directory.mkdir();
        }
        recoverProxy = new ComboBoxProxy<>(combox_date, "");
        recoverProxy.resetItems(nameList);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_backup;
    private javax.swing.JButton btn_init;
    private javax.swing.JButton btn_recover;
    private javax.swing.JComboBox<String> combox_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
